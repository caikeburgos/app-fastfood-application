name: pipeline
on:
  push:
    branches:
      - main

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: Navigate to the app directory
      run: |
        cd app

    - name: Run unit tests
      run: |
       cd app
       mvn test

    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1

    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v2
      with:
        name: jacoco-report
        path: target/site/jacoco/

  code-analysis:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: 17

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('app/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Navigate to the 'app' directory
      run: cd app

    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.TESTEFIAP }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=caikeburgos -Dsonar.login=$SONAR_TOKEN

    - name: Check Quality Gate
      env:
        SONAR_TOKEN: ${{ secrets.TESTEFIAP }}
      run: |
        QUALITY_GATE_STATUS=$(curl -s "https://sonarcloud.io/api/qualitygates/project_status?projectKey=caikeburgos" -H "Authorization: Basic $SONAR_TOKEN" | jq -r '.projectStatus.status')
        if [ "$QUALITY_GATE_STATUS" = "OK" ]; then
          echo "QG OK"
        fi
         
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: Build
      run: |
        cd app
        mvn package
      #working-directory: app

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Publish package
      run: |
        cd app  # Navega para o diret√≥rio do seu projeto
        mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      working-directory: app
